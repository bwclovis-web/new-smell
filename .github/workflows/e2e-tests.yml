name: E2E Tests

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  schedule:
    # Run E2E tests daily at 2 AM UTC
    - cron: "0 2 * * *"

jobs:
  e2e-tests:
    timeout-minutes: 60
    runs-on: ubuntu-latest

    strategy:
      matrix:
        # Test on multiple browsers
        browser: [chromium, firefox, webkit]
        # Test on different viewport sizes
        viewport: [desktop, mobile]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright browsers
        run: npx playwright install --with-deps ${{ matrix.browser }}

      - name: Build application
        run: npm run build
        env:
          NODE_ENV: production

      - name: Start application
        run: |
          npm start &
          sleep 30
        env:
          NODE_ENV: production
          PORT: 2112

      - name: Wait for application to be ready
        run: |
          timeout 60 bash -c 'until curl -f http://localhost:2112; do sleep 2; done'

      - name: Run E2E tests
        run: |
          if [ "${{ matrix.viewport }}" = "mobile" ]; then
            npx playwright test --project="${{ matrix.browser }}" --grep="mobile"
          else
            npx playwright test --project="${{ matrix.browser }}" --grep="mobile" --grep-invert
          fi
        env:
          PLAYWRIGHT_BASE_URL: http://localhost:2112

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report-${{ matrix.browser }}-${{ matrix.viewport }}
          path: |
            test-results/
            playwright-report/
          retention-days: 30

      - name: Upload screenshots
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: screenshots-${{ matrix.browser }}-${{ matrix.viewport }}
          path: test-results/screenshots/
          retention-days: 7

  e2e-tests-critical:
    timeout-minutes: 30
    runs-on: ubuntu-latest
    needs: e2e-tests
    if: always()

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright browsers
        run: npx playwright install --with-deps chromium

      - name: Build application
        run: npm run build
        env:
          NODE_ENV: production

      - name: Start application
        run: |
          npm start &
          sleep 30
        env:
          NODE_ENV: production
          PORT: 2112

      - name: Wait for application to be ready
        run: |
          timeout 60 bash -c 'until curl -f http://localhost:2112; do sleep 2; done'

      - name: Run critical E2E tests
        run: npx playwright test --project=chromium --grep="critical"
        env:
          PLAYWRIGHT_BASE_URL: http://localhost:2112

      - name: Upload critical test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: critical-test-results
          path: |
            test-results/
            playwright-report/
          retention-days: 30

  test-summary:
    runs-on: ubuntu-latest
    needs: [e2e-tests, e2e-tests-critical]
    if: always()

    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4

      - name: Generate test summary
        run: |
          echo "# E2E Test Results Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## Test Execution Status" >> $GITHUB_STEP_SUMMARY
          echo "- E2E Tests: ${{ needs.e2e-tests.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- Critical Tests: ${{ needs.e2e-tests-critical.result }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## Artifacts" >> $GITHUB_STEP_SUMMARY
          echo "Test reports and screenshots have been uploaded as artifacts." >> $GITHUB_STEP_SUMMARY
